// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          String @id @default(cuid())
  email       String @unique
  role        UserRole @default(USER)
  firstName   String
  lastName    String
  password    String

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())

  events      Event[]
  rsvps       RSVP[]
}

model Event {
  id String @id @default(cuid())
  title String
  description String
  location String
  startDate DateTime
  endDate DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  slug String @unique
  rsvpToken String @unique @default(uuid())
  coverImage EventCoverImage?

  creationStatus CreationStatus @default(DRAFT)
  status EventStatus @default(UPCOMING)

  creatorId String
  creator User @relation(fields: [creatorId], references: [id])
  
  rsvps RSVP[]
}

model RSVP {
  id String @id @default(cuid())
  name String
  email String
  status RSVPStatus
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  eventId String
  event Event @relation(fields: [eventId], references: [id])

  userId String?
  user User? @relation(fields: [userId], references: [id])

  @@unique ([eventId, email])
}

model EventCoverImage {
  id String @id @default(cuid())

  imageId String
  image Image @relation(fields: [imageId], references: [id])

  eventId String? @unique
  event Event? @relation(fields: [eventId], references: [id])
}

model Image {
  id String @id @default(cuid())
  url String
  altText String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  EventCoverImage EventCoverImage[]
}


enum CreationStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum EventStatus {
  UPCOMING
  ONGOING
  COMPLETED
  CANCELLED
}

enum RSVPStatus {
  ACCEPTED
  DECLINED
  MAYBE
  PENDING
}

enum UserRole {
  ADMIN
  USER
}